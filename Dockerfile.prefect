# Dockerfile for Prefect worker and flow execution
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONPATH=/app/src
ENV PIP_ROOT_USER_ACTION=ignore

# Use a dedicated virtual environment for Python packages
ENV VIRTUAL_ENV=/opt/venv
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Copy project metadata and source code first (needed for editable install)
COPY pyproject.toml uv.lock ./
COPY src/ ./src/
COPY alembic/ ./alembic/
COPY alembic.ini ./
COPY scripts/ ./scripts/

# Install Python dependencies into the venv (editable install requires src present)
RUN pip install --no-cache-dir uv && \
    uv pip install --no-cache-dir -e .

# Install requests for the wait script
RUN pip install --no-cache-dir requests

# Create logs directory
RUN mkdir -p /app/logs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import prefect; print('Prefect worker healthy')" || exit 1

# Default command for Prefect worker with retry mechanism
CMD ["/app/scripts/start_prefect_worker.sh"]
